{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\n\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  return prefixes;\n}\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\n\n\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\n\nconst prefixedEventNames = {};\n/**\n * Element to check for prefixes on.\n */\n\nlet style = {};\n/**\n * Bootstrap if a DOM exists.\n */\n\nif (canUseDOM) {\n  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  } // Same as above\n\n\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\n\n\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/react-dom/src/events/getVendorPrefixedEventName.js"],"names":["canUseDOM","makePrefixMap","styleProp","eventName","prefixes","toLowerCase","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","style","document","createElement","window","animation","transition","getVendorPrefixedEventName","prefixMap","hasOwnProperty"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,6BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AAC3C,QAAMC,QAAQ,GAAG,EAAjB;AAEAA,EAAAA,QAAQ,CAACF,SAAS,CAACG,WAAV,EAAD,CAAR,GAAoCF,SAAS,CAACE,WAAV,EAApC;AACAD,EAAAA,QAAQ,CAAC,WAAWF,SAAZ,CAAR,GAAiC,WAAWC,SAA5C;AACAC,EAAAA,QAAQ,CAAC,QAAQF,SAAT,CAAR,GAA8B,QAAQC,SAAtC;AAEA,SAAOC,QAAP;AACD;AAED;AACA;AACA;;;AACA,MAAME,cAAc,GAAG;AACrBC,EAAAA,YAAY,EAAEN,aAAa,CAAC,WAAD,EAAc,cAAd,CADN;AAErBO,EAAAA,kBAAkB,EAAEP,aAAa,CAAC,WAAD,EAAc,oBAAd,CAFZ;AAGrBQ,EAAAA,cAAc,EAAER,aAAa,CAAC,WAAD,EAAc,gBAAd,CAHR;AAIrBS,EAAAA,aAAa,EAAET,aAAa,CAAC,YAAD,EAAe,eAAf;AAJP,CAAvB;AAOA;AACA;AACA;;AACA,MAAMU,kBAAkB,GAAG,EAA3B;AAEA;AACA;AACA;;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEA;AACA;AACA;;AACA,IAAIZ,SAAJ,EAAe;AACbY,EAAAA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BF,KAAtC,CADa,CAGb;AACA;AACA;AACA;;AACA,MAAI,EAAE,oBAAoBG,MAAtB,CAAJ,EAAmC;AACjC,WAAOT,cAAc,CAACC,YAAf,CAA4BS,SAAnC;AACA,WAAOV,cAAc,CAACE,kBAAf,CAAkCQ,SAAzC;AACA,WAAOV,cAAc,CAACG,cAAf,CAA8BO,SAArC;AACD,GAXY,CAab;;;AACA,MAAI,EAAE,qBAAqBD,MAAvB,CAAJ,EAAoC;AAClC,WAAOT,cAAc,CAACI,aAAf,CAA6BO,UAApC;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,0BAAT,CAAoCf,SAApC,EAA+C;AAC7C,MAAIQ,kBAAkB,CAACR,SAAD,CAAtB,EAAmC;AACjC,WAAOQ,kBAAkB,CAACR,SAAD,CAAzB;AACD,GAFD,MAEO,IAAI,CAACG,cAAc,CAACH,SAAD,CAAnB,EAAgC;AACrC,WAAOA,SAAP;AACD;;AAED,QAAMgB,SAAS,GAAGb,cAAc,CAACH,SAAD,CAAhC;;AAEA,OAAK,MAAMD,SAAX,IAAwBiB,SAAxB,EAAmC;AACjC,QAAIA,SAAS,CAACC,cAAV,CAAyBlB,SAAzB,KAAuCA,SAAS,IAAIU,KAAxD,EAA+D;AAC7D,aAAQD,kBAAkB,CAACR,SAAD,CAAlB,GAAgCgB,SAAS,CAACjB,SAAD,CAAjD;AACD;AACF;;AAED,SAAOC,SAAP;AACD;;AAED,eAAee,0BAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd'),\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nconst prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nlet style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;\n"]},"metadata":{},"sourceType":"module"}