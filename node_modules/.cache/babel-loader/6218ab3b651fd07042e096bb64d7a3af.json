{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Below code forked from dom-accessibility-api\nconst tagToRoleMappings = {\n  ARTICLE: 'article',\n  ASIDE: 'complementary',\n  BODY: 'document',\n  BUTTON: 'button',\n  DATALIST: 'listbox',\n  DD: 'definition',\n  DETAILS: 'group',\n  DIALOG: 'dialog',\n  DT: 'term',\n  FIELDSET: 'group',\n  FIGURE: 'figure',\n  // WARNING: Only with an accessible name\n  FORM: 'form',\n  FOOTER: 'contentinfo',\n  H1: 'heading',\n  H2: 'heading',\n  H3: 'heading',\n  H4: 'heading',\n  H5: 'heading',\n  H6: 'heading',\n  HEADER: 'banner',\n  HR: 'separator',\n  LEGEND: 'legend',\n  LI: 'listitem',\n  MATH: 'math',\n  MAIN: 'main',\n  MENU: 'list',\n  NAV: 'navigation',\n  OL: 'list',\n  OPTGROUP: 'group',\n  // WARNING: Only in certain context\n  OPTION: 'option',\n  OUTPUT: 'status',\n  PROGRESS: 'progressbar',\n  // WARNING: Only with an accessible name\n  SECTION: 'region',\n  SUMMARY: 'button',\n  TABLE: 'table',\n  TBODY: 'rowgroup',\n  TEXTAREA: 'textbox',\n  TFOOT: 'rowgroup',\n  // WARNING: Only in certain context\n  TD: 'cell',\n  TH: 'columnheader',\n  THEAD: 'rowgroup',\n  TR: 'row',\n  UL: 'list'\n};\n\nfunction getImplicitRole(element) {\n  const mappedByTag = tagToRoleMappings[element.tagName];\n\n  if (mappedByTag !== undefined) {\n    return mappedByTag;\n  }\n\n  switch (element.tagName) {\n    case 'A':\n    case 'AREA':\n    case 'LINK':\n      if (element.hasAttribute('href')) {\n        return 'link';\n      }\n\n      break;\n\n    case 'IMG':\n      if ((element.getAttribute('alt') || '').length > 0) {\n        return 'img';\n      }\n\n      break;\n\n    case 'INPUT':\n      {\n        const type = element.type;\n\n        switch (type) {\n          case 'button':\n          case 'image':\n          case 'reset':\n          case 'submit':\n            return 'button';\n\n          case 'checkbox':\n          case 'radio':\n            return type;\n\n          case 'range':\n            return 'slider';\n\n          case 'email':\n          case 'tel':\n          case 'text':\n          case 'url':\n            if (element.hasAttribute('list')) {\n              return 'combobox';\n            }\n\n            return 'textbox';\n\n          case 'search':\n            if (element.hasAttribute('list')) {\n              return 'combobox';\n            }\n\n            return 'searchbox';\n\n          default:\n            return null;\n        }\n      }\n\n    case 'SELECT':\n      if (element.hasAttribute('multiple') || element.size > 1) {\n        return 'listbox';\n      }\n\n      return 'combobox';\n  }\n\n  return null;\n}\n\nfunction getExplicitRoles(element) {\n  const role = element.getAttribute('role');\n\n  if (role) {\n    return role.trim().split(' ');\n  }\n\n  return null;\n} // https://w3c.github.io/html-aria/#document-conformance-requirements-for-use-of-aria-attributes-in-html\n\n\nexport function hasRole(element, role) {\n  const explicitRoles = getExplicitRoles(element);\n\n  if (explicitRoles !== null && explicitRoles.indexOf(role) >= 0) {\n    return true;\n  }\n\n  return role === getImplicitRole(element);\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/react-dom/src/client/DOMAccessibilityRoles.js"],"names":["tagToRoleMappings","ARTICLE","ASIDE","BODY","BUTTON","DATALIST","DD","DETAILS","DIALOG","DT","FIELDSET","FIGURE","FORM","FOOTER","H1","H2","H3","H4","H5","H6","HEADER","HR","LEGEND","LI","MATH","MAIN","MENU","NAV","OL","OPTGROUP","OPTION","OUTPUT","PROGRESS","SECTION","SUMMARY","TABLE","TBODY","TEXTAREA","TFOOT","TD","TH","THEAD","TR","UL","getImplicitRole","element","mappedByTag","tagName","undefined","hasAttribute","getAttribute","length","type","size","getExplicitRoles","role","trim","split","hasRole","explicitRoles","indexOf"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Below code forked from dom-accessibility-api\n\nconst tagToRoleMappings = {\n  ARTICLE: 'article',\n  ASIDE: 'complementary',\n  BODY: 'document',\n  BUTTON: 'button',\n  DATALIST: 'listbox',\n  DD: 'definition',\n  DETAILS: 'group',\n  DIALOG: 'dialog',\n  DT: 'term',\n  FIELDSET: 'group',\n  FIGURE: 'figure',\n  // WARNING: Only with an accessible name\n  FORM: 'form',\n  FOOTER: 'contentinfo',\n  H1: 'heading',\n  H2: 'heading',\n  H3: 'heading',\n  H4: 'heading',\n  H5: 'heading',\n  H6: 'heading',\n  HEADER: 'banner',\n  HR: 'separator',\n  LEGEND: 'legend',\n  LI: 'listitem',\n  MATH: 'math',\n  MAIN: 'main',\n  MENU: 'list',\n  NAV: 'navigation',\n  OL: 'list',\n  OPTGROUP: 'group',\n  // WARNING: Only in certain context\n  OPTION: 'option',\n  OUTPUT: 'status',\n  PROGRESS: 'progressbar',\n  // WARNING: Only with an accessible name\n  SECTION: 'region',\n  SUMMARY: 'button',\n  TABLE: 'table',\n  TBODY: 'rowgroup',\n  TEXTAREA: 'textbox',\n  TFOOT: 'rowgroup',\n  // WARNING: Only in certain context\n  TD: 'cell',\n  TH: 'columnheader',\n  THEAD: 'rowgroup',\n  TR: 'row',\n  UL: 'list',\n};\n\nfunction getImplicitRole(element: Element): string | null {\n  const mappedByTag = tagToRoleMappings[element.tagName];\n  if (mappedByTag !== undefined) {\n    return mappedByTag;\n  }\n\n  switch (element.tagName) {\n    case 'A':\n    case 'AREA':\n    case 'LINK':\n      if (element.hasAttribute('href')) {\n        return 'link';\n      }\n      break;\n    case 'IMG':\n      if ((element.getAttribute('alt') || '').length > 0) {\n        return 'img';\n      }\n      break;\n    case 'INPUT': {\n      const type = (element: any).type;\n      switch (type) {\n        case 'button':\n        case 'image':\n        case 'reset':\n        case 'submit':\n          return 'button';\n        case 'checkbox':\n        case 'radio':\n          return type;\n        case 'range':\n          return 'slider';\n        case 'email':\n        case 'tel':\n        case 'text':\n        case 'url':\n          if (element.hasAttribute('list')) {\n            return 'combobox';\n          }\n          return 'textbox';\n        case 'search':\n          if (element.hasAttribute('list')) {\n            return 'combobox';\n          }\n          return 'searchbox';\n        default:\n          return null;\n      }\n    }\n\n    case 'SELECT':\n      if (element.hasAttribute('multiple') || (element: any).size > 1) {\n        return 'listbox';\n      }\n      return 'combobox';\n  }\n\n  return null;\n}\n\nfunction getExplicitRoles(element: Element): Array<string> | null {\n  const role = element.getAttribute('role');\n  if (role) {\n    return role.trim().split(' ');\n  }\n\n  return null;\n}\n\n// https://w3c.github.io/html-aria/#document-conformance-requirements-for-use-of-aria-attributes-in-html\nexport function hasRole(element: Element, role: string): boolean {\n  const explicitRoles = getExplicitRoles(element);\n  if (explicitRoles !== null && explicitRoles.indexOf(role) >= 0) {\n    return true;\n  }\n\n  return role === getImplicitRole(element);\n}\n"]},"metadata":{},"sourceType":"module"}