{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nexport function disableLogs() {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nexport function reenableLogs() {\n  if (__DEV__) {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: { ...props,\n          value: prevLog\n        },\n        info: { ...props,\n          value: prevInfo\n        },\n        warn: { ...props,\n          value: prevWarn\n        },\n        error: { ...props,\n          value: prevError\n        },\n        group: { ...props,\n          value: prevGroup\n        },\n        groupCollapsed: { ...props,\n          value: prevGroupCollapsed\n        },\n        groupEnd: { ...props,\n          value: prevGroupEnd\n        }\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      console.error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/shared/ConsolePatchingDev.js"],"names":["disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","__DEV__","console","log","info","warn","error","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","Object","defineProperties","reenableLogs"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAG,CAApB;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB,CAAE;;AACzBA,WAAW,CAACC,kBAAZ,GAAiC,IAAjC;AAEA,OAAO,SAASC,WAAT,GAA6B;AAClC,MAAIC,OAAJ,EAAa;AACX,QAAIX,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACAC,MAAAA,OAAO,GAAGW,OAAO,CAACC,GAAlB;AACAX,MAAAA,QAAQ,GAAGU,OAAO,CAACE,IAAnB;AACAX,MAAAA,QAAQ,GAAGS,OAAO,CAACG,IAAnB;AACAX,MAAAA,SAAS,GAAGQ,OAAO,CAACI,KAApB;AACAX,MAAAA,SAAS,GAAGO,OAAO,CAACK,KAApB;AACAX,MAAAA,kBAAkB,GAAGM,OAAO,CAACM,cAA7B;AACAX,MAAAA,YAAY,GAAGK,OAAO,CAACO,QAAvB,CARuB,CASvB;;AACA,YAAMC,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZC,QAAAA,KAAK,EAAEf,WAHK;AAIZgB,QAAAA,QAAQ,EAAE;AAJE,OAAd,CAVuB,CAgBvB;;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwBd,OAAxB,EAAiC;AAC/BE,QAAAA,IAAI,EAAEM,KADyB;AAE/BP,QAAAA,GAAG,EAAEO,KAF0B;AAG/BL,QAAAA,IAAI,EAAEK,KAHyB;AAI/BJ,QAAAA,KAAK,EAAEI,KAJwB;AAK/BH,QAAAA,KAAK,EAAEG,KALwB;AAM/BF,QAAAA,cAAc,EAAEE,KANe;AAO/BD,QAAAA,QAAQ,EAAEC;AAPqB,OAAjC;AASA;AACD;;AACDpB,IAAAA,aAAa;AACd;AACF;AAED,OAAO,SAAS2B,YAAT,GAA8B;AACnC,MAAIhB,OAAJ,EAAa;AACXX,IAAAA,aAAa;;AACb,QAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA,YAAMoB,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZE,QAAAA,QAAQ,EAAE;AAHE,OAAd,CAFuB,CAOvB;;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwBd,OAAxB,EAAiC;AAC/BC,QAAAA,GAAG,EAAE,EAAC,GAAGO,KAAJ;AAAWG,UAAAA,KAAK,EAAEtB;AAAlB,SAD0B;AAE/Ba,QAAAA,IAAI,EAAE,EAAC,GAAGM,KAAJ;AAAWG,UAAAA,KAAK,EAAErB;AAAlB,SAFyB;AAG/Ba,QAAAA,IAAI,EAAE,EAAC,GAAGK,KAAJ;AAAWG,UAAAA,KAAK,EAAEpB;AAAlB,SAHyB;AAI/Ba,QAAAA,KAAK,EAAE,EAAC,GAAGI,KAAJ;AAAWG,UAAAA,KAAK,EAAEnB;AAAlB,SAJwB;AAK/Ba,QAAAA,KAAK,EAAE,EAAC,GAAGG,KAAJ;AAAWG,UAAAA,KAAK,EAAElB;AAAlB,SALwB;AAM/Ba,QAAAA,cAAc,EAAE,EAAC,GAAGE,KAAJ;AAAWG,UAAAA,KAAK,EAAEjB;AAAlB,SANe;AAO/Ba,QAAAA,QAAQ,EAAE,EAAC,GAAGC,KAAJ;AAAWG,UAAAA,KAAK,EAAEhB;AAAlB;AAPqB,OAAjC;AASA;AACD;;AACD,QAAIP,aAAa,GAAG,CAApB,EAAuB;AACrBY,MAAAA,OAAO,CAACI,KAAR,CACE,oCACE,+CAFJ;AAID;AACF;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}