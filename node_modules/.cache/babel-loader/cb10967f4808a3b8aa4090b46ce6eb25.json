{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { enableCreateEventHandleAPI } from 'shared/ReactFeatureFlags';\nexport const allNativeEvents = new Set();\n\nif (enableCreateEventHandleAPI) {\n  allNativeEvents.add('beforeblur');\n  allNativeEvents.add('afterblur');\n}\n/**\n * Mapping from registration name to event name\n */\n\n\nexport const registrationNameDependencies = {};\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\n\nexport const possibleRegistrationNames = __DEV__ ? {} : null; // Trust the developer to only use possibleRegistrationNames in __DEV__\n\nexport function registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + 'Capture', dependencies);\n}\nexport function registerDirectEvent(registrationName, dependencies) {\n  if (__DEV__) {\n    if (registrationNameDependencies[registrationName]) {\n      console.error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);\n    }\n  }\n\n  registrationNameDependencies[registrationName] = dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n\n  for (let i = 0; i < dependencies.length; i++) {\n    allNativeEvents.add(dependencies[i]);\n  }\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/react-dom/src/events/EventRegistry.js"],"names":["enableCreateEventHandleAPI","allNativeEvents","Set","add","registrationNameDependencies","possibleRegistrationNames","__DEV__","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","console","error","lowerCasedName","toLowerCase","ondblclick","i","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAAQA,0BAAR,QAAyC,0BAAzC;AAEA,OAAO,MAAMC,eAAkC,GAAG,IAAIC,GAAJ,EAA3C;;AAEP,IAAIF,0BAAJ,EAAgC;AAC9BC,EAAAA,eAAe,CAACE,GAAhB,CAAoB,YAApB;AACAF,EAAAA,eAAe,CAACE,GAAhB,CAAoB,WAApB;AACD;AAED;AACA;AACA;;;AACA,OAAO,MAAMC,4BAA4B,GAAG,EAArC;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,yBAAyB,GAAGC,OAAO,GAAG,EAAH,GAAS,IAAlD,C,CACP;;AAEA,OAAO,SAASC,qBAAT,CACLC,gBADK,EAELC,YAFK,EAGC;AACNC,EAAAA,mBAAmB,CAACF,gBAAD,EAAmBC,YAAnB,CAAnB;AACAC,EAAAA,mBAAmB,CAACF,gBAAgB,GAAG,SAApB,EAA+BC,YAA/B,CAAnB;AACD;AAED,OAAO,SAASC,mBAAT,CACLF,gBADK,EAELC,YAFK,EAGL;AACA,MAAIH,OAAJ,EAAa;AACX,QAAIF,4BAA4B,CAACI,gBAAD,CAAhC,EAAoD;AAClDG,MAAAA,OAAO,CAACC,KAAR,CACE,uEACE,0BAFJ,EAGEJ,gBAHF;AAKD;AACF;;AAEDJ,EAAAA,4BAA4B,CAACI,gBAAD,CAA5B,GAAiDC,YAAjD;;AAEA,MAAIH,OAAJ,EAAa;AACX,UAAMO,cAAc,GAAGL,gBAAgB,CAACM,WAAjB,EAAvB;AACAT,IAAAA,yBAAyB,CAACQ,cAAD,CAAzB,GAA4CL,gBAA5C;;AAEA,QAAIA,gBAAgB,KAAK,eAAzB,EAA0C;AACxCH,MAAAA,yBAAyB,CAACU,UAA1B,GAAuCP,gBAAvC;AACD;AACF;;AAED,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5Cf,IAAAA,eAAe,CAACE,GAAhB,CAAoBM,YAAY,CAACO,CAAD,CAAhC;AACD;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from './DOMEventNames';\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport const allNativeEvents: Set<DOMEventName> = new Set();\n\nif (enableCreateEventHandleAPI) {\n  allNativeEvents.add('beforeblur');\n  allNativeEvents.add('afterblur');\n}\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\nexport function registerTwoPhaseEvent(\n  registrationName: string,\n  dependencies: Array<DOMEventName>,\n): void {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + 'Capture', dependencies);\n}\n\nexport function registerDirectEvent(\n  registrationName: string,\n  dependencies: Array<DOMEventName>,\n) {\n  if (__DEV__) {\n    if (registrationNameDependencies[registrationName]) {\n      console.error(\n        'EventRegistry: More than one plugin attempted to publish the same ' +\n          'registration name, `%s`.',\n        registrationName,\n      );\n    }\n  }\n\n  registrationNameDependencies[registrationName] = dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n\n  for (let i = 0; i < dependencies.length; i++) {\n    allNativeEvents.add(dependencies[i]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}