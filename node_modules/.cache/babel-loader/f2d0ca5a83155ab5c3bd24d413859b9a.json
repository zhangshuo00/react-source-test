{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\nexport function checkControlledValueProps(tagName, props) {\n  if (__DEV__) {\n    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {\n      console.error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n\n    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {\n      console.error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  }\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/react-dom/src/shared/ReactControlledValuePropTypes.js"],"names":["hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","checkControlledValueProps","tagName","props","__DEV__","type","onChange","onInput","readOnly","disabled","value","console","error","checked"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,IADe;AAEvBC,EAAAA,QAAQ,EAAE,IAFa;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBC,EAAAA,MAAM,EAAE,IAJe;AAKvBC,EAAAA,KAAK,EAAE,IALgB;AAMvBC,EAAAA,KAAK,EAAE,IANgB;AAOvBC,EAAAA,MAAM,EAAE;AAPe,CAAzB;AAUA,OAAO,SAASC,yBAAT,CACLC,OADK,EAELC,KAFK,EAGC;AACN,MAAIC,OAAJ,EAAa;AACX,QACE,EACEX,gBAAgB,CAACU,KAAK,CAACE,IAAP,CAAhB,IACAF,KAAK,CAACG,QADN,IAEAH,KAAK,CAACI,OAFN,IAGAJ,KAAK,CAACK,QAHN,IAIAL,KAAK,CAACM,QAJN,IAKAN,KAAK,CAACO,KAAN,IAAe,IANjB,CADF,EASE;AACAC,MAAAA,OAAO,CAACC,KAAR,CACE,4DACE,6DADF,GAEE,6DAFF,GAGE,sCAJJ;AAMD;;AAED,QACE,EACET,KAAK,CAACG,QAAN,IACAH,KAAK,CAACK,QADN,IAEAL,KAAK,CAACM,QAFN,IAGAN,KAAK,CAACU,OAAN,IAAiB,IAJnB,CADF,EAOE;AACAF,MAAAA,OAAO,CAACC,KAAR,CACE,8DACE,6DADF,GAEE,+DAFF,GAGE,sCAJJ;AAMD;AACF;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true,\n};\n\nexport function checkControlledValueProps(\n  tagName: string,\n  props: Object,\n): void {\n  if (__DEV__) {\n    if (\n      !(\n        hasReadOnlyValue[props.type] ||\n        props.onChange ||\n        props.onInput ||\n        props.readOnly ||\n        props.disabled ||\n        props.value == null\n      )\n    ) {\n      console.error(\n        'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    }\n\n    if (\n      !(\n        props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        props.checked == null\n      )\n    ) {\n      console.error(\n        'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}