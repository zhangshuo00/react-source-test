{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\nexport function get(key) {\n  return key._reactInternals;\n}\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\nexport function set(key, value) {\n  key._reactInternals = value;\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/shared/ReactInstanceMap.js"],"names":["remove","key","_reactInternals","undefined","get","has","set","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC1BA,EAAAA,GAAG,CAACC,eAAJ,GAAsBC,SAAtB;AACD;AAED,OAAO,SAASC,GAAT,CAAaH,GAAb,EAAkB;AACvB,SAAOA,GAAG,CAACC,eAAX;AACD;AAED,OAAO,SAASG,GAAT,CAAaJ,GAAb,EAAkB;AACvB,SAAOA,GAAG,CAACC,eAAJ,KAAwBC,SAA/B;AACD;AAED,OAAO,SAASG,GAAT,CAAaL,GAAb,EAAkBM,KAAlB,EAAyB;AAC9BN,EAAAA,GAAG,CAACC,eAAJ,GAAsBK,KAAtB;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n"]},"metadata":{},"sourceType":"module"}