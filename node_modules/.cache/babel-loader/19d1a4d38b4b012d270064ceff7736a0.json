{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { REACT_CONTEXT_TYPE, REACT_FORWARD_REF_TYPE, REACT_FRAGMENT_TYPE, REACT_PROFILER_TYPE, REACT_PROVIDER_TYPE, REACT_DEBUG_TRACING_MODE_TYPE, REACT_STRICT_MODE_TYPE, REACT_SUSPENSE_TYPE, REACT_SUSPENSE_LIST_TYPE, REACT_MEMO_TYPE, REACT_LAZY_TYPE, REACT_SCOPE_TYPE, REACT_LEGACY_HIDDEN_TYPE, REACT_OFFSCREEN_TYPE, REACT_CACHE_TYPE } from 'shared/ReactSymbols';\nimport { enableScopeAPI, enableCache } from './ReactFeatureFlags';\nlet REACT_MODULE_REFERENCE = 0;\n\nif (typeof Symbol === 'function') {\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nexport default function isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || type === REACT_OFFSCREEN_TYPE || enableScopeAPI && type === REACT_SCOPE_TYPE || enableCache && type === REACT_CACHE_TYPE) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/shared/isValidElementType.js"],"names":["REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_FRAGMENT_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","enableScopeAPI","enableCache","REACT_MODULE_REFERENCE","Symbol","for","isValidElementType","type","$$typeof","getModuleId","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACEA,kBADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,6BANF,EAOEC,sBAPF,EAQEC,mBARF,EASEC,wBATF,EAUEC,eAVF,EAWEC,eAXF,EAYEC,gBAZF,EAaEC,wBAbF,EAcEC,oBAdF,EAeEC,gBAfF,QAgBO,qBAhBP;AAiBA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,qBAA1C;AAEA,IAAIC,sBAAuC,GAAG,CAA9C;;AACA,IAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAChCD,EAAAA,sBAAsB,GAAGC,MAAM,CAACC,GAAP,CAAW,wBAAX,CAAzB;AACD;;AAED,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAyC;AACtD,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAhD,EAA4D;AAC1D,WAAO,IAAP;AACD,GAHqD,CAKtD;;;AACA,MACEA,IAAI,KAAKnB,mBAAT,IACAmB,IAAI,KAAKlB,mBADT,IAEAkB,IAAI,KAAKhB,6BAFT,IAGAgB,IAAI,KAAKf,sBAHT,IAIAe,IAAI,KAAKd,mBAJT,IAKAc,IAAI,KAAKb,wBALT,IAMAa,IAAI,KAAKT,wBANT,IAOAS,IAAI,KAAKR,oBAPT,IAQCE,cAAc,IAAIM,IAAI,KAAKV,gBAR5B,IASCK,WAAW,IAAIK,IAAI,KAAKP,gBAV3B,EAWE;AACA,WAAO,IAAP;AACD;;AAED,MAAI,OAAOO,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC7C,QACEA,IAAI,CAACC,QAAL,KAAkBZ,eAAlB,IACAW,IAAI,CAACC,QAAL,KAAkBb,eADlB,IAEAY,IAAI,CAACC,QAAL,KAAkBlB,mBAFlB,IAGAiB,IAAI,CAACC,QAAL,KAAkBtB,kBAHlB,IAIAqB,IAAI,CAACC,QAAL,KAAkBrB,sBAJlB,IAKA;AACA;AACA;AACA;AACAoB,IAAAA,IAAI,CAACC,QAAL,KAAkBL,sBATlB,IAUAI,IAAI,CAACE,WAAL,KAAqBC,SAXvB,EAYE;AACA,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_CACHE_TYPE,\n} from 'shared/ReactSymbols';\nimport {enableScopeAPI, enableCache} from './ReactFeatureFlags';\n\nlet REACT_MODULE_REFERENCE: number | Symbol = 0;\nif (typeof Symbol === 'function') {\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nexport default function isValidElementType(type: mixed) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  }\n\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n  if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_DEBUG_TRACING_MODE_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    type === REACT_LEGACY_HIDDEN_TYPE ||\n    type === REACT_OFFSCREEN_TYPE ||\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\n    (enableCache && type === REACT_CACHE_TYPE)\n  ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (\n      type.$$typeof === REACT_LAZY_TYPE ||\n      type.$$typeof === REACT_MEMO_TYPE ||\n      type.$$typeof === REACT_PROVIDER_TYPE ||\n      type.$$typeof === REACT_CONTEXT_TYPE ||\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\n      // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      type.$$typeof === REACT_MODULE_REFERENCE ||\n      type.getModuleId !== undefined\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}