{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { TEXT_NODE } from '../shared/HTMLNodeType';\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963\n\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n\n\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/react-dom/src/events/getEventTarget.js"],"names":["TEXT_NODE","getEventTarget","nativeEvent","target","srcElement","window","correspondingUseElement","nodeType","parentNode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,wBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACnC;AACA;AACA,MAAIC,MAAM,GAAGD,WAAW,CAACC,MAAZ,IAAsBD,WAAW,CAACE,UAAlC,IAAgDC,MAA7D,CAHmC,CAKnC;;AACA,MAAIF,MAAM,CAACG,uBAAX,EAAoC;AAClCH,IAAAA,MAAM,GAAGA,MAAM,CAACG,uBAAhB;AACD,GARkC,CAUnC;AACA;;;AACA,SAAOH,MAAM,CAACI,QAAP,KAAoBP,SAApB,GAAgCG,MAAM,CAACK,UAAvC,GAAoDL,MAA3D;AACD;;AAED,eAAeF,cAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;\n"]},"metadata":{},"sourceType":"module"}