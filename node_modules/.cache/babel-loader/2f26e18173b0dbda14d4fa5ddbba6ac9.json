{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { queueExplicitHydrationTarget } from '../events/ReactDOMEventReplaying';\nimport { isContainerMarkedAsRoot, markContainerAsRoot, unmarkContainerAsRoot } from './ReactDOMComponentTree';\nimport { listenToAllSupportedEvents } from '../events/DOMPluginEventSystem';\nimport { ELEMENT_NODE, COMMENT_NODE, DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE } from '../shared/HTMLNodeType';\nimport { createContainer, updateContainer, findHostInstanceWithNoPortals, registerMutableSourceForHydration, flushSync, isAlreadyRendering } from 'react-reconciler/src/ReactFiberReconciler';\nimport { ConcurrentRoot } from 'react-reconciler/src/ReactRootTags';\nimport { allowConcurrentByDefault } from 'shared/ReactFeatureFlags';\n\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\n\n_c = ReactDOMRoot;\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {\n  const root = this._internalRoot;\n\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    }\n\n    const container = root.containerInfo;\n\n    if (container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + \"root.unmount() to empty a root's container.\");\n        }\n      }\n    }\n  }\n\n  updateContainer(children, root, null, null);\n};\n\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function () {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    }\n  }\n\n  const root = this._internalRoot;\n\n  if (root !== null) {\n    this._internalRoot = null;\n    const container = root.containerInfo;\n\n    if (__DEV__) {\n      if (isAlreadyRendering()) {\n        console.error('Attempted to synchronously unmount a root while React was already ' + 'rendering. React cannot finish unmounting the root until the ' + 'current render has completed, which may lead to a race condition.');\n      }\n    }\n\n    flushSync(() => {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nexport function createRoot(container, options) {\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container); // TODO: Delete these options\n\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks = options != null && options.hydrationOptions || null;\n  const mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null; // END TODO\n\n  const isStrictMode = options != null && options.unstable_strictMode === true;\n  let concurrentUpdatesByDefaultOverride = null;\n\n  if (allowConcurrentByDefault) {\n    concurrentUpdatesByDefaultOverride = options != null && options.unstable_concurrentUpdatesByDefault != null ? options.unstable_concurrentUpdatesByDefault : null;\n  }\n\n  const root = createContainer(container, ConcurrentRoot, hydrate, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride);\n  markContainerAsRoot(root.current, container);\n  const rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n  listenToAllSupportedEvents(rootContainerElement); // TODO: Delete this path\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  } // END TODO\n\n\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\n\n_c2 = ReactDOMHydrationRoot;\n\nfunction scheduleHydration(target) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\n\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\nexport function hydrateRoot(container, initialChildren, options) {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container); // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n\n  const hydrationCallbacks = options != null ? options : null;\n  const mutableSources = options != null && options.hydratedSources || null;\n  const isStrictMode = options != null && options.unstable_strictMode === true;\n  let concurrentUpdatesByDefaultOverride = null;\n\n  if (allowConcurrentByDefault) {\n    concurrentUpdatesByDefaultOverride = options != null && options.unstable_concurrentUpdatesByDefault != null ? options.unstable_concurrentUpdatesByDefault : null;\n  }\n\n  const root = createContainer(container, ConcurrentRoot, true, // hydrate\n  hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride);\n  markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  } // Render the initial children\n\n\n  updateContainer(initialChildren, root, null, null);\n  return new ReactDOMHydrationRoot(root);\n}\nexport function isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE));\n} // TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\n\nexport function isValidContainerLegacy(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {\n      console.error('createRoot(): Creating roots directly with document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try using a container element created ' + 'for your app.');\n    }\n\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error('You are calling ReactDOM.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');\n      } else {\n        console.error('You are calling ReactDOM.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');\n      }\n    }\n  }\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactDOMRoot\");\n$RefreshReg$(_c2, \"ReactDOMHydrationRoot\");","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/react-dom/src/client/ReactDOMRoot.js"],"names":["queueExplicitHydrationTarget","isContainerMarkedAsRoot","markContainerAsRoot","unmarkContainerAsRoot","listenToAllSupportedEvents","ELEMENT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","createContainer","updateContainer","findHostInstanceWithNoPortals","registerMutableSourceForHydration","flushSync","isAlreadyRendering","ConcurrentRoot","allowConcurrentByDefault","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","prototype","render","children","root","Error","__DEV__","arguments","console","error","container","containerInfo","nodeType","hostInstance","current","parentNode","unmount","createRoot","options","isValidContainerLegacy","warnIfReactDOMContainerInDEV","hydrate","hydrationCallbacks","hydrationOptions","mutableSources","isStrictMode","unstable_strictMode","concurrentUpdatesByDefaultOverride","unstable_concurrentUpdatesByDefault","rootContainerElement","i","length","mutableSource","scheduleHydration","target","unstable_scheduleHydration","hydrateRoot","initialChildren","isValidContainer","hydratedSources","node","nodeValue","tagName","toUpperCase","_reactRootContainer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,SAAQA,4BAAR,QAA2C,kCAA3C;AAmCA,SACEC,uBADF,EAEEC,mBAFF,EAGEC,qBAHF,QAIO,yBAJP;AAKA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,sBAJF,QAKO,wBALP;AAOA,SACEC,eADF,EAEEC,eAFF,EAGEC,6BAHF,EAIEC,iCAJF,EAKEC,SALF,EAMEC,kBANF,QAOO,2CAPP;AAQA,SAAQC,cAAR,QAA6B,oCAA7B;AACA,SAAQC,wBAAR,QAAuC,0BAAvC;;AAEA,SAASC,YAAT,CAAsBC,YAAtB,EAA+C;AAC7C,OAAKC,aAAL,GAAqBD,YAArB;AACD;;KAFQD,Y;;AAITG,qBAAqB,CAACC,SAAtB,CAAgCC,MAAhC,GAAyCL,YAAY,CAACI,SAAb,CAAuBC,MAAvB,GAAgC,UACvEC,QADuE,EAEjE;AACN,QAAMC,IAAI,GAAG,KAAKL,aAAlB;;AACA,MAAIK,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,QAAI,OAAOC,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAA5B,EAAwC;AACtCC,MAAAA,OAAO,CAACC,KAAR,CACE,iEACE,4FAFJ;AAID;;AACD,UAAMC,SAAS,GAAGN,IAAI,CAACO,aAAvB;;AAEA,QAAID,SAAS,CAACE,QAAV,KAAuB1B,YAA3B,EAAyC;AACvC,YAAM2B,YAAY,GAAGtB,6BAA6B,CAACa,IAAI,CAACU,OAAN,CAAlD;;AACA,UAAID,YAAJ,EAAkB;AAChB,YAAIA,YAAY,CAACE,UAAb,KAA4BL,SAAhC,EAA2C;AACzCF,UAAAA,OAAO,CAACC,KAAR,CACE,kEACE,8DADF,GAEE,iDAFF,GAGE,6CAJJ;AAMD;AACF;AACF;AACF;;AACDnB,EAAAA,eAAe,CAACa,QAAD,EAAWC,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,CAAf;AACD,CAhCD;;AAkCAJ,qBAAqB,CAACC,SAAtB,CAAgCe,OAAhC,GAA0CnB,YAAY,CAACI,SAAb,CAAuBe,OAAvB,GAAiC,YAAiB;AAC1F,MAAIV,OAAJ,EAAa;AACX,QAAI,OAAOC,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAA5B,EAAwC;AACtCC,MAAAA,OAAO,CAACC,KAAR,CACE,yDACE,4FAFJ;AAID;AACF;;AACD,QAAML,IAAI,GAAG,KAAKL,aAAlB;;AACA,MAAIK,IAAI,KAAK,IAAb,EAAmB;AACjB,SAAKL,aAAL,GAAqB,IAArB;AACA,UAAMW,SAAS,GAAGN,IAAI,CAACO,aAAvB;;AACA,QAAIL,OAAJ,EAAa;AACX,UAAIZ,kBAAkB,EAAtB,EAA0B;AACxBc,QAAAA,OAAO,CAACC,KAAR,CACE,uEACE,+DADF,GAEE,mEAHJ;AAKD;AACF;;AACDhB,IAAAA,SAAS,CAAC,MAAM;AACdH,MAAAA,eAAe,CAAC,IAAD,EAAOc,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAf;AACD,KAFQ,CAAT;AAGArB,IAAAA,qBAAqB,CAAC2B,SAAD,CAArB;AACD;AACF,CA3BD;;AA6BA,OAAO,SAASO,UAAT,CACLP,SADK,EAELQ,OAFK,EAGK;AACV,MAAI,CAACC,sBAAsB,CAACT,SAAD,CAA3B,EAAwC;AACtC,UAAM,IAAIL,KAAJ,CAAU,yDAAV,CAAN;AACD;;AAEDe,EAAAA,4BAA4B,CAACV,SAAD,CAA5B,CALU,CAOV;;AACA,QAAMW,OAAO,GAAGH,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACG,OAAR,KAAoB,IAAvD;AACA,QAAMC,kBAAkB,GACrBJ,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACK,gBAA5B,IAAiD,IADnD;AAEA,QAAMC,cAAc,GACjBN,OAAO,IAAI,IAAX,IACCA,OAAO,CAACK,gBAAR,IAA4B,IAD7B,IAECL,OAAO,CAACK,gBAAR,CAAyBC,cAF3B,IAGA,IAJF,CAXU,CAgBV;;AAEA,QAAMC,YAAY,GAAGP,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACQ,mBAAR,KAAgC,IAAxE;AACA,MAAIC,kCAAkC,GAAG,IAAzC;;AACA,MAAI/B,wBAAJ,EAA8B;AAC5B+B,IAAAA,kCAAkC,GAChCT,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACU,mCAAR,IAA+C,IAAlE,GACIV,OAAO,CAACU,mCADZ,GAEI,IAHN;AAID;;AAED,QAAMxB,IAAI,GAAGf,eAAe,CAC1BqB,SAD0B,EAE1Bf,cAF0B,EAG1B0B,OAH0B,EAI1BC,kBAJ0B,EAK1BG,YAL0B,EAM1BE,kCAN0B,CAA5B;AAQA7C,EAAAA,mBAAmB,CAACsB,IAAI,CAACU,OAAN,EAAeJ,SAAf,CAAnB;AAEA,QAAMmB,oBAAoB,GACxBnB,SAAS,CAACE,QAAV,KAAuB1B,YAAvB,GAAsCwB,SAAS,CAACK,UAAhD,GAA6DL,SAD/D;AAEA1B,EAAAA,0BAA0B,CAAC6C,oBAAD,CAA1B,CAvCU,CAyCV;;AACA,MAAIL,cAAJ,EAAoB;AAClB,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,cAAc,CAACO,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAME,aAAa,GAAGR,cAAc,CAACM,CAAD,CAApC;AACAtC,MAAAA,iCAAiC,CAACY,IAAD,EAAO4B,aAAP,CAAjC;AACD;AACF,GA/CS,CAgDV;;;AAEA,SAAO,IAAInC,YAAJ,CAAiBO,IAAjB,CAAP;AACD;;AAED,SAASJ,qBAAT,CAA+BF,YAA/B,EAAwD;AACtD,OAAKC,aAAL,GAAqBD,YAArB;AACD;;MAFQE,qB;;AAGT,SAASiC,iBAAT,CAA2BC,MAA3B,EAAyC;AACvC,MAAIA,MAAJ,EAAY;AACVtD,IAAAA,4BAA4B,CAACsD,MAAD,CAA5B;AACD;AACF;;AACDlC,qBAAqB,CAACC,SAAtB,CAAgCkC,0BAAhC,GAA6DF,iBAA7D;AAEA,OAAO,SAASG,WAAT,CACL1B,SADK,EAEL2B,eAFK,EAGLnB,OAHK,EAIK;AACV,MAAI,CAACoB,gBAAgB,CAAC5B,SAAD,CAArB,EAAkC;AAChC,UAAM,IAAIL,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAEDe,EAAAA,4BAA4B,CAACV,SAAD,CAA5B,CALU,CAOV;AACA;;AACA,QAAMY,kBAAkB,GAAGJ,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B,IAAvD;AACA,QAAMM,cAAc,GAAIN,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACqB,eAA5B,IAAgD,IAAvE;AACA,QAAMd,YAAY,GAAGP,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACQ,mBAAR,KAAgC,IAAxE;AAEA,MAAIC,kCAAkC,GAAG,IAAzC;;AACA,MAAI/B,wBAAJ,EAA8B;AAC5B+B,IAAAA,kCAAkC,GAChCT,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACU,mCAAR,IAA+C,IAAlE,GACIV,OAAO,CAACU,mCADZ,GAEI,IAHN;AAID;;AAED,QAAMxB,IAAI,GAAGf,eAAe,CAC1BqB,SAD0B,EAE1Bf,cAF0B,EAG1B,IAH0B,EAGpB;AACN2B,EAAAA,kBAJ0B,EAK1BG,YAL0B,EAM1BE,kCAN0B,CAA5B;AAQA7C,EAAAA,mBAAmB,CAACsB,IAAI,CAACU,OAAN,EAAeJ,SAAf,CAAnB,CA7BU,CA8BV;;AACA1B,EAAAA,0BAA0B,CAAC0B,SAAD,CAA1B;;AAEA,MAAIc,cAAJ,EAAoB;AAClB,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,cAAc,CAACO,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAME,aAAa,GAAGR,cAAc,CAACM,CAAD,CAApC;AACAtC,MAAAA,iCAAiC,CAACY,IAAD,EAAO4B,aAAP,CAAjC;AACD;AACF,GAtCS,CAwCV;;;AACA1C,EAAAA,eAAe,CAAC+C,eAAD,EAAkBjC,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAf;AAEA,SAAO,IAAIJ,qBAAJ,CAA0BI,IAA1B,CAAP;AACD;AAED,OAAO,SAASkC,gBAAT,CAA0BE,IAA1B,EAA8C;AACnD,SAAO,CAAC,EACNA,IAAI,KACHA,IAAI,CAAC5B,QAAL,KAAkB3B,YAAlB,IACCuD,IAAI,CAAC5B,QAAL,KAAkBzB,aADnB,IAECqD,IAAI,CAAC5B,QAAL,KAAkBxB,sBAHhB,CADE,CAAR;AAMD,C,CAED;AACA;;AACA,OAAO,SAAS+B,sBAAT,CAAgCqB,IAAhC,EAAoD;AACzD,SAAO,CAAC,EACNA,IAAI,KACHA,IAAI,CAAC5B,QAAL,KAAkB3B,YAAlB,IACCuD,IAAI,CAAC5B,QAAL,KAAkBzB,aADnB,IAECqD,IAAI,CAAC5B,QAAL,KAAkBxB,sBAFnB,IAGEoD,IAAI,CAAC5B,QAAL,KAAkB1B,YAAlB,IACEsD,IAAD,CAAYC,SAAZ,KAA0B,8BAL1B,CADE,CAAR;AAQD;;AAED,SAASrB,4BAAT,CAAsCV,SAAtC,EAAiD;AAC/C,MAAIJ,OAAJ,EAAa;AACX,QACEI,SAAS,CAACE,QAAV,KAAuB3B,YAAvB,IACEyB,SAAF,CAA4BgC,OAD5B,IAEEhC,SAAF,CAA4BgC,OAA5B,CAAoCC,WAApC,OAAsD,MAHxD,EAIE;AACAnC,MAAAA,OAAO,CAACC,KAAR,CACE,iEACE,uEADF,GAEE,0DAFF,GAGE,+DAHF,GAIE,eALJ;AAOD;;AACD,QAAI5B,uBAAuB,CAAC6B,SAAD,CAA3B,EAAwC;AACtC,UAAIA,SAAS,CAACkC,mBAAd,EAAmC;AACjCpC,QAAAA,OAAO,CAACC,KAAR,CACE,8EACE,qDAFJ;AAID,OALD,MAKO;AACLD,QAAAA,OAAO,CAACC,KAAR,CACE,+DACE,gEADF,GAEE,sEAHJ;AAKD;AACF;AACF;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Container} from './ReactDOMHostConfig';\nimport type {MutableSource, ReactNodeList} from 'shared/ReactTypes';\nimport type {FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\n\nimport {queueExplicitHydrationTarget} from '../events/ReactDOMEventReplaying';\n\nexport type RootType = {\n  render(children: ReactNodeList): void,\n  unmount(): void,\n  _internalRoot: FiberRoot | null,\n  ...\n};\n\nexport type CreateRootOptions = {\n  // TODO: Remove these options.\n  hydrate?: boolean,\n  hydrationOptions?: {\n    onHydrated?: (suspenseNode: Comment) => void,\n    onDeleted?: (suspenseNode: Comment) => void,\n    mutableSources?: Array<MutableSource<any>>,\n    ...\n  },\n  // END OF TODO\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  ...\n};\n\nexport type HydrateRootOptions = {\n  // Hydration options\n  hydratedSources?: Array<MutableSource<any>>,\n  onHydrated?: (suspenseNode: Comment) => void,\n  onDeleted?: (suspenseNode: Comment) => void,\n  // Options for all roots\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  ...\n};\n\nimport {\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {listenToAllSupportedEvents} from '../events/DOMPluginEventSystem';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {\n  createContainer,\n  updateContainer,\n  findHostInstanceWithNoPortals,\n  registerMutableSourceForHydration,\n  flushSync,\n  isAlreadyRendering,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport {ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';\nimport {allowConcurrentByDefault} from 'shared/ReactFeatureFlags';\n\nfunction ReactDOMRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(\n  children: ReactNodeList,\n): void {\n  const root = this._internalRoot;\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error(\n        'render(...): does not support the second callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n    const container = root.containerInfo;\n\n    if (container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of the ' +\n              'root container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              \"root.unmount() to empty a root's container.\",\n          );\n        }\n      }\n    }\n  }\n  updateContainer(children, root, null, null);\n};\n\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function(): void {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error(\n        'unmount(...): does not support a callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n  }\n  const root = this._internalRoot;\n  if (root !== null) {\n    this._internalRoot = null;\n    const container = root.containerInfo;\n    if (__DEV__) {\n      if (isAlreadyRendering()) {\n        console.error(\n          'Attempted to synchronously unmount a root while React was already ' +\n            'rendering. React cannot finish unmounting the root until the ' +\n            'current render has completed, which may lead to a race condition.',\n        );\n      }\n    }\n    flushSync(() => {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nexport function createRoot(\n  container: Container,\n  options?: CreateRootOptions,\n): RootType {\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  // TODO: Delete these options\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks =\n    (options != null && options.hydrationOptions) || null;\n  const mutableSources =\n    (options != null &&\n      options.hydrationOptions != null &&\n      options.hydrationOptions.mutableSources) ||\n    null;\n  // END TODO\n\n  const isStrictMode = options != null && options.unstable_strictMode === true;\n  let concurrentUpdatesByDefaultOverride = null;\n  if (allowConcurrentByDefault) {\n    concurrentUpdatesByDefaultOverride =\n      options != null && options.unstable_concurrentUpdatesByDefault != null\n        ? options.unstable_concurrentUpdatesByDefault\n        : null;\n  }\n\n  const root = createContainer(\n    container,\n    ConcurrentRoot,\n    hydrate,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  markContainerAsRoot(root.current, container);\n\n  const rootContainerElement =\n    container.nodeType === COMMENT_NODE ? container.parentNode : container;\n  listenToAllSupportedEvents(rootContainerElement);\n\n  // TODO: Delete this path\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n  // END TODO\n\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\nfunction scheduleHydration(target: Node) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\n\nexport function hydrateRoot(\n  container: Container,\n  initialChildren: ReactNodeList,\n  options?: HydrateRootOptions,\n): RootType {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n  const hydrationCallbacks = options != null ? options : null;\n  const mutableSources = (options != null && options.hydratedSources) || null;\n  const isStrictMode = options != null && options.unstable_strictMode === true;\n\n  let concurrentUpdatesByDefaultOverride = null;\n  if (allowConcurrentByDefault) {\n    concurrentUpdatesByDefaultOverride =\n      options != null && options.unstable_concurrentUpdatesByDefault != null\n        ? options.unstable_concurrentUpdatesByDefault\n        : null;\n  }\n\n  const root = createContainer(\n    container,\n    ConcurrentRoot,\n    true, // hydrate\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  markContainerAsRoot(root.current, container);\n  // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n\n  // Render the initial children\n  updateContainer(initialChildren, root, null, null);\n\n  return new ReactDOMHydrationRoot(root);\n}\n\nexport function isValidContainer(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE)\n  );\n}\n\n// TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\nexport function isValidContainerLegacy(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'createRoot(): Creating roots directly with document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try using a container element created ' +\n          'for your app.',\n      );\n    }\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error(\n          'You are calling ReactDOM.createRoot() on a container that was previously ' +\n            'passed to ReactDOM.render(). This is not supported.',\n        );\n      } else {\n        console.error(\n          'You are calling ReactDOM.createRoot() on a container that ' +\n            'has already been passed to createRoot() before. Instead, call ' +\n            'root.render() on the existing root instead if you want to update it.',\n        );\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}