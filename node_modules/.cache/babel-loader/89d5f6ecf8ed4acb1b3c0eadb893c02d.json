{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { enableNewReconciler } from 'shared/ReactFeatureFlags'; // The entry file imports either the old or new version of the reconciler.\n// During build and testing, this indirection is always shimmed with the actual\n// modules, otherwise both reconcilers would be initialized. So this is really\n// only here for Flow purposes.\n\nimport { createContainer as createContainer_old, updateContainer as updateContainer_old, batchedUpdates as batchedUpdates_old, deferredUpdates as deferredUpdates_old, discreteUpdates as discreteUpdates_old, flushControlled as flushControlled_old, flushSync as flushSync_old, isAlreadyRendering as isAlreadyRendering_old, flushPassiveEffects as flushPassiveEffects_old, getPublicRootInstance as getPublicRootInstance_old, attemptSynchronousHydration as attemptSynchronousHydration_old, attemptDiscreteHydration as attemptDiscreteHydration_old, attemptContinuousHydration as attemptContinuousHydration_old, attemptHydrationAtCurrentPriority as attemptHydrationAtCurrentPriority_old, findHostInstance as findHostInstance_old, findHostInstanceWithWarning as findHostInstanceWithWarning_old, findHostInstanceWithNoPortals as findHostInstanceWithNoPortals_old, shouldError as shouldError_old, shouldSuspend as shouldSuspend_old, injectIntoDevTools as injectIntoDevTools_old, createPortal as createPortal_old, createComponentSelector as createComponentSelector_old, createHasPseudoClassSelector as createHasPseudoClassSelector_old, createRoleSelector as createRoleSelector_old, createTestNameSelector as createTestNameSelector_old, createTextSelector as createTextSelector_old, getFindAllNodesFailureDescription as getFindAllNodesFailureDescription_old, findAllNodes as findAllNodes_old, findBoundingRects as findBoundingRects_old, focusWithin as focusWithin_old, observeVisibleRects as observeVisibleRects_old, registerMutableSourceForHydration as registerMutableSourceForHydration_old, runWithPriority as runWithPriority_old, getCurrentUpdatePriority as getCurrentUpdatePriority_old } from './ReactFiberReconciler.old';\nimport { createContainer as createContainer_new, updateContainer as updateContainer_new, batchedUpdates as batchedUpdates_new, deferredUpdates as deferredUpdates_new, discreteUpdates as discreteUpdates_new, flushControlled as flushControlled_new, flushSync as flushSync_new, isAlreadyRendering as isAlreadyRendering_new, flushPassiveEffects as flushPassiveEffects_new, getPublicRootInstance as getPublicRootInstance_new, attemptSynchronousHydration as attemptSynchronousHydration_new, attemptDiscreteHydration as attemptDiscreteHydration_new, attemptContinuousHydration as attemptContinuousHydration_new, attemptHydrationAtCurrentPriority as attemptHydrationAtCurrentPriority_new, findHostInstance as findHostInstance_new, findHostInstanceWithWarning as findHostInstanceWithWarning_new, findHostInstanceWithNoPortals as findHostInstanceWithNoPortals_new, shouldError as shouldError_new, shouldSuspend as shouldSuspend_new, injectIntoDevTools as injectIntoDevTools_new, createPortal as createPortal_new, createComponentSelector as createComponentSelector_new, createHasPseudoClassSelector as createHasPseudoClassSelector_new, createRoleSelector as createRoleSelector_new, createTestNameSelector as createTestNameSelector_new, createTextSelector as createTextSelector_new, getFindAllNodesFailureDescription as getFindAllNodesFailureDescription_new, findAllNodes as findAllNodes_new, findBoundingRects as findBoundingRects_new, focusWithin as focusWithin_new, observeVisibleRects as observeVisibleRects_new, registerMutableSourceForHydration as registerMutableSourceForHydration_new, runWithPriority as runWithPriority_new, getCurrentUpdatePriority as getCurrentUpdatePriority_new } from './ReactFiberReconciler.new';\nexport const createContainer = enableNewReconciler ? createContainer_new : createContainer_old;\nexport const updateContainer = enableNewReconciler ? updateContainer_new : updateContainer_old;\nexport const batchedUpdates = enableNewReconciler ? batchedUpdates_new : batchedUpdates_old;\nexport const deferredUpdates = enableNewReconciler ? deferredUpdates_new : deferredUpdates_old;\nexport const discreteUpdates = enableNewReconciler ? discreteUpdates_new : discreteUpdates_old;\nexport const flushControlled = enableNewReconciler ? flushControlled_new : flushControlled_old;\nexport const flushSync = enableNewReconciler ? flushSync_new : flushSync_old;\nexport const isAlreadyRendering = enableNewReconciler ? isAlreadyRendering_new : isAlreadyRendering_old;\nexport const flushPassiveEffects = enableNewReconciler ? flushPassiveEffects_new : flushPassiveEffects_old;\nexport const getPublicRootInstance = enableNewReconciler ? getPublicRootInstance_new : getPublicRootInstance_old;\nexport const attemptSynchronousHydration = enableNewReconciler ? attemptSynchronousHydration_new : attemptSynchronousHydration_old;\nexport const attemptDiscreteHydration = enableNewReconciler ? attemptDiscreteHydration_new : attemptDiscreteHydration_old;\nexport const attemptContinuousHydration = enableNewReconciler ? attemptContinuousHydration_new : attemptContinuousHydration_old;\nexport const attemptHydrationAtCurrentPriority = enableNewReconciler ? attemptHydrationAtCurrentPriority_new : attemptHydrationAtCurrentPriority_old;\nexport const getCurrentUpdatePriority = enableNewReconciler ? getCurrentUpdatePriority_new : getCurrentUpdatePriority_old;\nexport const findHostInstance = enableNewReconciler ? findHostInstance_new : findHostInstance_old;\nexport const findHostInstanceWithWarning = enableNewReconciler ? findHostInstanceWithWarning_new : findHostInstanceWithWarning_old;\nexport const findHostInstanceWithNoPortals = enableNewReconciler ? findHostInstanceWithNoPortals_new : findHostInstanceWithNoPortals_old;\nexport const shouldError = enableNewReconciler ? shouldError_new : shouldError_old;\nexport const shouldSuspend = enableNewReconciler ? shouldSuspend_new : shouldSuspend_old;\nexport const injectIntoDevTools = enableNewReconciler ? injectIntoDevTools_new : injectIntoDevTools_old;\nexport const createPortal = enableNewReconciler ? createPortal_new : createPortal_old;\nexport const createComponentSelector = enableNewReconciler ? createComponentSelector_new : createComponentSelector_old; //TODO: \"psuedo\" is spelled \"pseudo\"\n\nexport const createHasPseudoClassSelector = enableNewReconciler ? createHasPseudoClassSelector_new : createHasPseudoClassSelector_old;\nexport const createRoleSelector = enableNewReconciler ? createRoleSelector_new : createRoleSelector_old;\nexport const createTextSelector = enableNewReconciler ? createTextSelector_new : createTextSelector_old;\nexport const createTestNameSelector = enableNewReconciler ? createTestNameSelector_new : createTestNameSelector_old;\nexport const getFindAllNodesFailureDescription = enableNewReconciler ? getFindAllNodesFailureDescription_new : getFindAllNodesFailureDescription_old;\nexport const findAllNodes = enableNewReconciler ? findAllNodes_new : findAllNodes_old;\nexport const findBoundingRects = enableNewReconciler ? findBoundingRects_new : findBoundingRects_old;\nexport const focusWithin = enableNewReconciler ? focusWithin_new : focusWithin_old;\nexport const observeVisibleRects = enableNewReconciler ? observeVisibleRects_new : observeVisibleRects_old;\nexport const registerMutableSourceForHydration = enableNewReconciler ? registerMutableSourceForHydration_new : registerMutableSourceForHydration_old;\nexport const runWithPriority = enableNewReconciler ? runWithPriority_new : runWithPriority_old;","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/react-reconciler/src/ReactFiberReconciler.js"],"names":["enableNewReconciler","createContainer","createContainer_old","updateContainer","updateContainer_old","batchedUpdates","batchedUpdates_old","deferredUpdates","deferredUpdates_old","discreteUpdates","discreteUpdates_old","flushControlled","flushControlled_old","flushSync","flushSync_old","isAlreadyRendering","isAlreadyRendering_old","flushPassiveEffects","flushPassiveEffects_old","getPublicRootInstance","getPublicRootInstance_old","attemptSynchronousHydration","attemptSynchronousHydration_old","attemptDiscreteHydration","attemptDiscreteHydration_old","attemptContinuousHydration","attemptContinuousHydration_old","attemptHydrationAtCurrentPriority","attemptHydrationAtCurrentPriority_old","findHostInstance","findHostInstance_old","findHostInstanceWithWarning","findHostInstanceWithWarning_old","findHostInstanceWithNoPortals","findHostInstanceWithNoPortals_old","shouldError","shouldError_old","shouldSuspend","shouldSuspend_old","injectIntoDevTools","injectIntoDevTools_old","createPortal","createPortal_old","createComponentSelector","createComponentSelector_old","createHasPseudoClassSelector","createHasPseudoClassSelector_old","createRoleSelector","createRoleSelector_old","createTestNameSelector","createTestNameSelector_old","createTextSelector","createTextSelector_old","getFindAllNodesFailureDescription","getFindAllNodesFailureDescription_old","findAllNodes","findAllNodes_old","findBoundingRects","findBoundingRects_old","focusWithin","focusWithin_old","observeVisibleRects","observeVisibleRects_old","registerMutableSourceForHydration","registerMutableSourceForHydration_old","runWithPriority","runWithPriority_old","getCurrentUpdatePriority","getCurrentUpdatePriority_old","createContainer_new","updateContainer_new","batchedUpdates_new","deferredUpdates_new","discreteUpdates_new","flushControlled_new","flushSync_new","isAlreadyRendering_new","flushPassiveEffects_new","getPublicRootInstance_new","attemptSynchronousHydration_new","attemptDiscreteHydration_new","attemptContinuousHydration_new","attemptHydrationAtCurrentPriority_new","findHostInstance_new","findHostInstanceWithWarning_new","findHostInstanceWithNoPortals_new","shouldError_new","shouldSuspend_new","injectIntoDevTools_new","createPortal_new","createComponentSelector_new","createHasPseudoClassSelector_new","createRoleSelector_new","createTestNameSelector_new","createTextSelector_new","getFindAllNodesFailureDescription_new","findAllNodes_new","findBoundingRects_new","focusWithin_new","observeVisibleRects_new","registerMutableSourceForHydration_new","runWithPriority_new","getCurrentUpdatePriority_new"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableNewReconciler} from 'shared/ReactFeatureFlags';\n\n// The entry file imports either the old or new version of the reconciler.\n// During build and testing, this indirection is always shimmed with the actual\n// modules, otherwise both reconcilers would be initialized. So this is really\n// only here for Flow purposes.\n\nimport {\n  createContainer as createContainer_old,\n  updateContainer as updateContainer_old,\n  batchedUpdates as batchedUpdates_old,\n  deferredUpdates as deferredUpdates_old,\n  discreteUpdates as discreteUpdates_old,\n  flushControlled as flushControlled_old,\n  flushSync as flushSync_old,\n  isAlreadyRendering as isAlreadyRendering_old,\n  flushPassiveEffects as flushPassiveEffects_old,\n  getPublicRootInstance as getPublicRootInstance_old,\n  attemptSynchronousHydration as attemptSynchronousHydration_old,\n  attemptDiscreteHydration as attemptDiscreteHydration_old,\n  attemptContinuousHydration as attemptContinuousHydration_old,\n  attemptHydrationAtCurrentPriority as attemptHydrationAtCurrentPriority_old,\n  findHostInstance as findHostInstance_old,\n  findHostInstanceWithWarning as findHostInstanceWithWarning_old,\n  findHostInstanceWithNoPortals as findHostInstanceWithNoPortals_old,\n  shouldError as shouldError_old,\n  shouldSuspend as shouldSuspend_old,\n  injectIntoDevTools as injectIntoDevTools_old,\n  createPortal as createPortal_old,\n  createComponentSelector as createComponentSelector_old,\n  createHasPseudoClassSelector as createHasPseudoClassSelector_old,\n  createRoleSelector as createRoleSelector_old,\n  createTestNameSelector as createTestNameSelector_old,\n  createTextSelector as createTextSelector_old,\n  getFindAllNodesFailureDescription as getFindAllNodesFailureDescription_old,\n  findAllNodes as findAllNodes_old,\n  findBoundingRects as findBoundingRects_old,\n  focusWithin as focusWithin_old,\n  observeVisibleRects as observeVisibleRects_old,\n  registerMutableSourceForHydration as registerMutableSourceForHydration_old,\n  runWithPriority as runWithPriority_old,\n  getCurrentUpdatePriority as getCurrentUpdatePriority_old,\n} from './ReactFiberReconciler.old';\n\nimport {\n  createContainer as createContainer_new,\n  updateContainer as updateContainer_new,\n  batchedUpdates as batchedUpdates_new,\n  deferredUpdates as deferredUpdates_new,\n  discreteUpdates as discreteUpdates_new,\n  flushControlled as flushControlled_new,\n  flushSync as flushSync_new,\n  isAlreadyRendering as isAlreadyRendering_new,\n  flushPassiveEffects as flushPassiveEffects_new,\n  getPublicRootInstance as getPublicRootInstance_new,\n  attemptSynchronousHydration as attemptSynchronousHydration_new,\n  attemptDiscreteHydration as attemptDiscreteHydration_new,\n  attemptContinuousHydration as attemptContinuousHydration_new,\n  attemptHydrationAtCurrentPriority as attemptHydrationAtCurrentPriority_new,\n  findHostInstance as findHostInstance_new,\n  findHostInstanceWithWarning as findHostInstanceWithWarning_new,\n  findHostInstanceWithNoPortals as findHostInstanceWithNoPortals_new,\n  shouldError as shouldError_new,\n  shouldSuspend as shouldSuspend_new,\n  injectIntoDevTools as injectIntoDevTools_new,\n  createPortal as createPortal_new,\n  createComponentSelector as createComponentSelector_new,\n  createHasPseudoClassSelector as createHasPseudoClassSelector_new,\n  createRoleSelector as createRoleSelector_new,\n  createTestNameSelector as createTestNameSelector_new,\n  createTextSelector as createTextSelector_new,\n  getFindAllNodesFailureDescription as getFindAllNodesFailureDescription_new,\n  findAllNodes as findAllNodes_new,\n  findBoundingRects as findBoundingRects_new,\n  focusWithin as focusWithin_new,\n  observeVisibleRects as observeVisibleRects_new,\n  registerMutableSourceForHydration as registerMutableSourceForHydration_new,\n  runWithPriority as runWithPriority_new,\n  getCurrentUpdatePriority as getCurrentUpdatePriority_new,\n} from './ReactFiberReconciler.new';\n\nexport const createContainer = enableNewReconciler\n  ? createContainer_new\n  : createContainer_old;\nexport const updateContainer = enableNewReconciler\n  ? updateContainer_new\n  : updateContainer_old;\nexport const batchedUpdates = enableNewReconciler\n  ? batchedUpdates_new\n  : batchedUpdates_old;\nexport const deferredUpdates = enableNewReconciler\n  ? deferredUpdates_new\n  : deferredUpdates_old;\nexport const discreteUpdates = enableNewReconciler\n  ? discreteUpdates_new\n  : discreteUpdates_old;\nexport const flushControlled = enableNewReconciler\n  ? flushControlled_new\n  : flushControlled_old;\nexport const flushSync = enableNewReconciler ? flushSync_new : flushSync_old;\nexport const isAlreadyRendering = enableNewReconciler\n  ? isAlreadyRendering_new\n  : isAlreadyRendering_old;\nexport const flushPassiveEffects = enableNewReconciler\n  ? flushPassiveEffects_new\n  : flushPassiveEffects_old;\nexport const getPublicRootInstance = enableNewReconciler\n  ? getPublicRootInstance_new\n  : getPublicRootInstance_old;\nexport const attemptSynchronousHydration = enableNewReconciler\n  ? attemptSynchronousHydration_new\n  : attemptSynchronousHydration_old;\nexport const attemptDiscreteHydration = enableNewReconciler\n  ? attemptDiscreteHydration_new\n  : attemptDiscreteHydration_old;\nexport const attemptContinuousHydration = enableNewReconciler\n  ? attemptContinuousHydration_new\n  : attemptContinuousHydration_old;\nexport const attemptHydrationAtCurrentPriority = enableNewReconciler\n  ? attemptHydrationAtCurrentPriority_new\n  : attemptHydrationAtCurrentPriority_old;\nexport const getCurrentUpdatePriority = enableNewReconciler\n  ? getCurrentUpdatePriority_new\n  : getCurrentUpdatePriority_old;\nexport const findHostInstance = enableNewReconciler\n  ? findHostInstance_new\n  : findHostInstance_old;\nexport const findHostInstanceWithWarning = enableNewReconciler\n  ? findHostInstanceWithWarning_new\n  : findHostInstanceWithWarning_old;\nexport const findHostInstanceWithNoPortals = enableNewReconciler\n  ? findHostInstanceWithNoPortals_new\n  : findHostInstanceWithNoPortals_old;\nexport const shouldError = enableNewReconciler\n  ? shouldError_new\n  : shouldError_old;\nexport const shouldSuspend = enableNewReconciler\n  ? shouldSuspend_new\n  : shouldSuspend_old;\nexport const injectIntoDevTools = enableNewReconciler\n  ? injectIntoDevTools_new\n  : injectIntoDevTools_old;\nexport const createPortal = enableNewReconciler\n  ? createPortal_new\n  : createPortal_old;\nexport const createComponentSelector = enableNewReconciler\n  ? createComponentSelector_new\n  : createComponentSelector_old;\n\n//TODO: \"psuedo\" is spelled \"pseudo\"\nexport const createHasPseudoClassSelector = enableNewReconciler\n  ? createHasPseudoClassSelector_new\n  : createHasPseudoClassSelector_old;\nexport const createRoleSelector = enableNewReconciler\n  ? createRoleSelector_new\n  : createRoleSelector_old;\nexport const createTextSelector = enableNewReconciler\n  ? createTextSelector_new\n  : createTextSelector_old;\nexport const createTestNameSelector = enableNewReconciler\n  ? createTestNameSelector_new\n  : createTestNameSelector_old;\nexport const getFindAllNodesFailureDescription = enableNewReconciler\n  ? getFindAllNodesFailureDescription_new\n  : getFindAllNodesFailureDescription_old;\nexport const findAllNodes = enableNewReconciler\n  ? findAllNodes_new\n  : findAllNodes_old;\nexport const findBoundingRects = enableNewReconciler\n  ? findBoundingRects_new\n  : findBoundingRects_old;\nexport const focusWithin = enableNewReconciler\n  ? focusWithin_new\n  : focusWithin_old;\nexport const observeVisibleRects = enableNewReconciler\n  ? observeVisibleRects_new\n  : observeVisibleRects_old;\nexport const registerMutableSourceForHydration = enableNewReconciler\n  ? registerMutableSourceForHydration_new\n  : registerMutableSourceForHydration_old;\nexport const runWithPriority = enableNewReconciler\n  ? runWithPriority_new\n  : runWithPriority_old;\n"]},"metadata":{},"sourceType":"module"}