{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { consoleManagedByDevToolsDuringStrictMode, enableProfilerTimer } from 'shared/ReactFeatureFlags';\nimport { DidCapture } from './ReactFiberFlags';\nimport { DiscreteEventPriority, ContinuousEventPriority, DefaultEventPriority, IdleEventPriority } from './ReactEventPriorities.old';\nimport { ImmediatePriority as ImmediateSchedulerPriority, UserBlockingPriority as UserBlockingSchedulerPriority, NormalPriority as NormalSchedulerPriority, IdlePriority as IdleSchedulerPriority, unstable_yieldValue, unstable_setDisableYieldValue } from './Scheduler';\nimport { setSuppressWarning } from 'shared/consoleWithStackDev';\nimport { disableLogs, reenableLogs } from 'shared/ConsolePatchingDev';\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\nexport const isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nexport function injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nexport function onScheduleRoot(root, children) {\n  if (__DEV__) {\n    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nexport function onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nexport function onPostCommitRoot(root) {\n  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nexport function onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nexport function setIsStrictModeForDevtools(newIsStrictMode) {\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    if (typeof unstable_yieldValue === 'function') {\n      // We're in a test because Scheduler.unstable_yieldValue only exists\n      // in SchedulerMock. To reduce the noise in strict mode tests,\n      // suppress warnings and disable scheduler yielding during the double render\n      unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\n      try {\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error('React instrumentation encountered an error: %s', err);\n          }\n        }\n      }\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/zhangshuo/git/my-app/src/react/packages/react-reconciler/src/ReactFiberDevToolsHook.old.js"],"names":["consoleManagedByDevToolsDuringStrictMode","enableProfilerTimer","DidCapture","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","ImmediatePriority","ImmediateSchedulerPriority","UserBlockingPriority","UserBlockingSchedulerPriority","NormalPriority","NormalSchedulerPriority","IdlePriority","IdleSchedulerPriority","unstable_yieldValue","unstable_setDisableYieldValue","setSuppressWarning","disableLogs","reenableLogs","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","__DEV__","console","error","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","didError","current","flags","schedulerPriority","undefined","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","fiber","onCommitFiberUnmount","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  consoleManagedByDevToolsDuringStrictMode,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {EventPriority} from './ReactEventPriorities.old';\n\nimport {DidCapture} from './ReactFiberFlags';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n} from './ReactEventPriorities.old';\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  unstable_yieldValue,\n  unstable_setDisableYieldValue,\n} from './Scheduler';\nimport {setSuppressWarning} from 'shared/consoleWithStackDev';\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, eventPriority: EventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onPostCommitRoot(root: FiberRoot) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === 'function'\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function setIsStrictModeForDevtools(newIsStrictMode: boolean) {\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    if (typeof unstable_yieldValue === 'function') {\n      // We're in a test because Scheduler.unstable_yieldValue only exists\n      // in SchedulerMock. To reduce the noise in strict mode tests,\n      // suppress warnings and disable scheduler yielding during the double render\n      unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\n      try {\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}