{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nconst valueStack = [];\nlet fiberStack;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction isEmpty() {\n  return index === -1;\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error('Expected an empty stack. Something was not reset properly.');\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport { createCursor, isEmpty, pop, push // DEV only:\n, checkThatStackIsEmpty, resetStackAfterFatalErrorInDev };","map":{"version":3,"sources":["/Users/zhangshuo/git/react-source-test/src/react/packages/react-reconciler/src/ReactFiberStack.new.js"],"names":["valueStack","fiberStack","__DEV__","index","createCursor","defaultValue","current","isEmpty","pop","cursor","fiber","console","error","push","value","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAMA,UAAsB,GAAG,EAA/B;AAEA,IAAIC,UAAJ;;AAEA,IAAIC,OAAJ,EAAa;AACXD,EAAAA,UAAU,GAAG,EAAb;AACD;;AAED,IAAIE,KAAK,GAAG,CAAC,CAAb;;AAEA,SAASC,YAAT,CAAyBC,YAAzB,EAA0D;AACxD,SAAO;AACLC,IAAAA,OAAO,EAAED;AADJ,GAAP;AAGD;;AAED,SAASE,OAAT,GAA4B;AAC1B,SAAOJ,KAAK,KAAK,CAAC,CAAlB;AACD;;AAED,SAASK,GAAT,CAAgBC,MAAhB,EAAwCC,KAAxC,EAA4D;AAC1D,MAAIP,KAAK,GAAG,CAAZ,EAAe;AACb,QAAID,OAAJ,EAAa;AACXS,MAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd;AACD;;AACD;AACD;;AAED,MAAIV,OAAJ,EAAa;AACX,QAAIQ,KAAK,KAAKT,UAAU,CAACE,KAAD,CAAxB,EAAiC;AAC/BQ,MAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACD;AACF;;AAEDH,EAAAA,MAAM,CAACH,OAAP,GAAiBN,UAAU,CAACG,KAAD,CAA3B;AAEAH,EAAAA,UAAU,CAACG,KAAD,CAAV,GAAoB,IAApB;;AAEA,MAAID,OAAJ,EAAa;AACXD,IAAAA,UAAU,CAACE,KAAD,CAAV,GAAoB,IAApB;AACD;;AAEDA,EAAAA,KAAK;AACN;;AAED,SAASU,IAAT,CAAiBJ,MAAjB,EAAyCK,KAAzC,EAAmDJ,KAAnD,EAAuE;AACrEP,EAAAA,KAAK;AAELH,EAAAA,UAAU,CAACG,KAAD,CAAV,GAAoBM,MAAM,CAACH,OAA3B;;AAEA,MAAIJ,OAAJ,EAAa;AACXD,IAAAA,UAAU,CAACE,KAAD,CAAV,GAAoBO,KAApB;AACD;;AAEDD,EAAAA,MAAM,CAACH,OAAP,GAAiBQ,KAAjB;AACD;;AAED,SAASC,qBAAT,GAAiC;AAC/B,MAAIb,OAAJ,EAAa;AACX,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBQ,MAAAA,OAAO,CAACC,KAAR,CACE,4DADF;AAGD;AACF;AACF;;AAED,SAASI,8BAAT,GAA0C;AACxC,MAAId,OAAJ,EAAa;AACXC,IAAAA,KAAK,GAAG,CAAC,CAAT;AACAH,IAAAA,UAAU,CAACiB,MAAX,GAAoB,CAApB;AACAhB,IAAAA,UAAU,CAACgB,MAAX,GAAoB,CAApB;AACD;AACF;;AAED,SACEb,YADF,EAEEG,OAFF,EAGEC,GAHF,EAIEK,IAJF,CAKE;AALF,EAMEE,qBANF,EAOEC,8BAPF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n"]},"metadata":{},"sourceType":"module"}